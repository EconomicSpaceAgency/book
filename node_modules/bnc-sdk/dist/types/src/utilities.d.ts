import { Emitter, NotificationObject } from './types';
export declare function createEmitter(): Emitter;
export declare function networkName(blockchain: string, id: number): string;
export declare function serverEcho(eventCode: string): boolean;
export declare function last(arr: (undefined | boolean | NotificationObject)[]): undefined | boolean | NotificationObject;
export declare function isAddress(blockchain: string, addressOrHash: string): boolean;
export declare function isTxid(blockchain: string, addressOrHash: string): boolean;
export declare function wait(time: number): Promise<unknown>;
export declare const jsonPreserveUndefined: (k: any, v: any) => any;
/**
 * Tests if LocalStorage may be used. Accounts for environments where
 * LocalStorage is not supported, as well as those where it is blocked.
 *
 * @returns `true` if LocalStorage is supported and accessible, `false` otherwise.
 */
export declare function isLocalStorageAvailable(): boolean;
