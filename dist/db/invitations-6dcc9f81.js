import{i as s}from"./supabase-bcc39e3c.js";const e=s();async function v(r){try{const{data:i,error:t}=await e.from("invitations").select("*").eq("value",r).lt("used_times",5).limit(1);if(t)throw t;return console.log("isInvitationValid",i),i&&i.length>0}catch(i){return console.error("Error checking invitation validity:",i),!1}}async function d(r,i){try{const{data:t,error:n}=await e.from("invitations").select("used_times").eq("value",r).limit(1);if(n)throw n;if(t.length===0)throw new Error("Invitation not found");const a=t[0].used_times+1,o=await e.from("invitations").update({used_by_wallet:i,used_times:a}).eq("value",r);if(o.error)throw o.error;console.log("Invitation marked as used.")}catch(t){console.error("Error marking invitation as used:",t)}}async function u(r,i){try{const{error:t}=await e.from("invitations").update({invited_by_invitation_id:r}).eq("value",i);if(t)throw t;console.log("Invitation marked as ivnited by.")}catch(t){console.error("Error marking invitation as used:",t)}}async function m(r,i){try{const{error:t}=await e.from("invitations").update({invited_by_reservation_id:r}).eq("value",i);if(t)throw t;console.log("Invitation marked as ivnited by.")}catch(t){console.error("Error marking invitation as used:",t)}}async function y(){try{const{data:r,error:i}=await e.from("invitations").select("*").eq("used_by_wallet","0x").eq("invited_by_reservation_id",0).eq("invited_by_invitation_id",0).limit(1);if(i)throw i;return r}catch(r){return console.error("Error fetching next three invitations:",r),null}}async function f(r){try{const{data:i,error:t}=await e.from("invitations").select("*").eq("value",r).limit(1);if(t)throw t;return console.log("getInvitationByInvitationValue data response: ",i),i}catch(i){return console.error("Error checking invitation validity:",i),null}}export{f as a,u as b,m as c,y as g,v as i,d as s};
